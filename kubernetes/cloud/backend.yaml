apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: opt-rag
  labels:
    app: opt-rag
    component: backend
spec:
  type: LoadBalancer
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: opt-rag
    component: backend
  # type: ClusterIP
---
# OPT-RAG Backend Deployment Configuration
# UPDATED: Now supports both local model and API-based modes
# 
# API Mode (Recommended): Set USE_API_LLM=true, requires minimal resources
# Local Mode: Set USE_API_LLM=false, requires high memory (8-16Gi)

apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-service
  namespace: opt-rag
  labels:
    app: opt-rag
    component: backend
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: opt-rag
      component: backend
  template:
    metadata:
      labels:
        app: opt-rag
        component: backend
    spec:
      containers:
      - name: backend
        image: us-central1-docker.pkg.dev/visa-llm-assistant/opt-rag-docker-repo/opt-rag-backend:v6-amd64-fix
        ports:
        - containerPort: 8000
        env:
        # === API MODE CONFIGURATION ===
        - name: OPT_RAG_USE_API_LLM
          value: "true"
        - name: OPT_RAG_LLM_API_PROVIDER
          value: "openai"
        - name: OPT_RAG_LLM_API_MODEL
          value: "gpt-4o-mini"
        
        # === OPENAI API KEY (Standard way OpenAI library expects it) ===
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: llm-api-secret
              key: api-key
        
        # === FALLBACK API KEY (Our custom approach) ===
        - name: OPT_RAG_LLM_API_KEY
          valueFrom:
            secretKeyRef:
              name: llm-api-secret
              key: api-key
              
        # === COMMON CONFIGURATION ===
        - name: OPT_RAG_VECTOR_STORE_PATH
          value: "/app/vector_store"
        - name: OPT_RAG_HOST
          value: "0.0.0.0"
        - name: OPT_RAG_PORT
          value: "8000"
        - name: OPT_RAG_LOG_LEVEL
          value: "INFO"
        - name: OPT_RAG_ENABLE_STREAMING
          value: "true"
        - name: OPT_RAG_OTLP_ENDPOINT
          value: "http://jaeger:4317"
        resources:
          requests:
            memory: "1Gi"
            cpu: "200m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          failureThreshold: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 30
        volumeMounts:
        - name: vector-store-volume
          mountPath: /app/vector_store
      
      volumes:
      # Vector store volume only
      - name: vector-store-volume
        persistentVolumeClaim:
          claimName: vector-store-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vector-store-pvc
  namespace: opt-rag
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard 