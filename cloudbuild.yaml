steps:
# Build the backend image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '--platform', 'linux/amd64', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/opt-rag-docker-repo/opt-rag-backend:v1', '-f', 'rag-pipeline/Dockerfile', 'rag-pipeline/']

# Build the frontend image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '--platform', 'linux/amd64', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/opt-rag-docker-repo/opt-rag-frontend:v1', '-f', 'streamlit/Dockerfile', 'streamlit/']

# Build the NGINX gateway image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '--platform', 'linux/amd64', '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/opt-rag-docker-repo/opt-rag-gateway:v1', '-f', 'nginx/Dockerfile', 'nginx/']

# Deploy to GKE
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'apply'
  - '-f'
  - 'kubernetes/cloud/backend.yaml'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=opt-rag-cluster'

- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'apply'
  - '-f'
  - 'kubernetes/cloud/frontend.yaml'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=opt-rag-cluster'

- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'apply'
  - '-f'
  - 'kubernetes/cloud/monitoring.yaml'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=opt-rag-cluster'

- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'apply'
  - '-f'
  - 'kubernetes/cloud/ingress.yaml'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=opt-rag-cluster'

images:
- 'us-central1-docker.pkg.dev/$PROJECT_ID/opt-rag-docker-repo/opt-rag-backend:v1'
- 'us-central1-docker.pkg.dev/$PROJECT_ID/opt-rag-docker-repo/opt-rag-frontend:v1'
- 'us-central1-docker.pkg.dev/$PROJECT_ID/opt-rag-docker-repo/opt-rag-gateway:v1' 