apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: opt-rag-release
      meta.helm.sh/release-namespace: opt-rag
    creationTimestamp: "2025-05-17T14:46:49Z"
    generation: 1
    labels:
      app: opt-rag-release-backend
      app.kubernetes.io/managed-by: Helm
      component: backend
    name: backend
    namespace: opt-rag
    resourceVersion: "8261560"
    uid: e0677a18-e3a7-424c-a979-254619095982
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: opt-rag-release-backend
        component: backend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: opt-rag-release-backend
          component: backend
      spec:
        containers:
        - env:
          - name: MODEL_PATH
            value: /app/models/qwen2.5-1.5b
          - name: VECTOR_STORE_PATH
            value: /app/vector_store
          - name: DEVICE
            value: cpu
          - name: OTLP_ENDPOINT
            value: http://jaeger:4317
          image: us-central1-docker.pkg.dev/visa-llm-assistant/opt-rag-docker-repoopt-rag-backend:v1
          imagePullPolicy: IfNotPresent
          name: backend
          ports:
          - containerPort: 8000
            name: http
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/models
            name: models-volume
          - mountPath: /app/vector_store
            name: vector-store-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: models-volume
          persistentVolumeClaim:
            claimName: models-pvc
        - name: vector-store-volume
          persistentVolumeClaim:
            claimName: vector-store-pvc
  status:
    conditions:
    - lastTransitionTime: "2025-05-17T14:46:49Z"
      lastUpdateTime: "2025-05-17T14:46:49Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2025-05-17T14:46:49Z"
      lastUpdateTime: "2025-05-17T14:46:50Z"
      message: ReplicaSet "backend-855fdc577" is progressing.
      reason: ReplicaSetUpdated
      status: "True"
      type: Progressing
    observedGeneration: 1
    replicas: 1
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: opt-rag-release
      meta.helm.sh/release-namespace: opt-rag
    creationTimestamp: "2025-05-17T14:46:49Z"
    generation: 1
    labels:
      app: opt-rag-release-frontend
      app.kubernetes.io/managed-by: Helm
      component: frontend
    name: frontend
    namespace: opt-rag
    resourceVersion: "8261557"
    uid: aa55040a-aa53-40e3-b994-dee2751035e7
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: opt-rag-release-frontend
        component: frontend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: opt-rag-release-frontend
          component: frontend
      spec:
        containers:
        - env:
          - name: API_URL
            value: http://backend-service:8000
          image: us-central1-docker.pkg.dev/visa-llm-assistant/opt-rag-docker-repoopt-rag-frontend:v1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8501
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: frontend
          ports:
          - containerPort: 8501
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8501
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2025-05-17T14:46:49Z"
      lastUpdateTime: "2025-05-17T14:46:49Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2025-05-17T14:46:49Z"
      lastUpdateTime: "2025-05-17T14:46:49Z"
      message: ReplicaSet "frontend-648fb49d9f" is progressing.
      reason: ReplicaSetUpdated
      status: "True"
      type: Progressing
    observedGeneration: 1
    replicas: 1
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: opt-rag-release
      meta.helm.sh/release-namespace: opt-rag
    creationTimestamp: "2025-05-17T14:46:49Z"
    generation: 1
    labels:
      app: opt-rag-release-nginx
      app.kubernetes.io/managed-by: Helm
      component: nginx
    name: nginx
    namespace: opt-rag
    resourceVersion: "8263527"
    uid: 46eebe6c-7063-4e49-87c6-b2bb98ad4b9e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: opt-rag-release-nginx
        component: nginx
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: opt-rag-release-nginx
          component: nginx
      spec:
        containers:
        - image: us-central1-docker.pkg.dev/visa-llm-assistant/opt-rag-docker-repo/opt-rag-gateway:v1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 80
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: nginx
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/nginx/nginx.conf
            name: nginx-config
            subPath: nginx.conf
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: nginx-config
          name: nginx-config
  status:
    conditions:
    - lastTransitionTime: "2025-05-17T14:46:49Z"
      lastUpdateTime: "2025-05-17T14:46:51Z"
      message: ReplicaSet "nginx-7df8964fcc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-05-17T14:49:44Z"
      lastUpdateTime: "2025-05-17T14:49:44Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    observedGeneration: 1
    replicas: 1
    unavailableReplicas: 1
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
