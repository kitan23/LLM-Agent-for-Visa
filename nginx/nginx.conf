# NGINX Configuration for OPT-RAG API Gateway
# This file defines how NGINX routes requests to backend services

user nginx;
worker_processes auto;  # Automatically determine the number of worker processes

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;  # Maximum number of connections per worker
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # Optimization settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript;

    # Define backend services (OPT-RAG API servers)
    upstream opt_rag_backend {
        # List of backend servers - add more for scaling
        server opt-rag-api:8000;  # Service name in Docker network

        # Uncomment below to add more instances when scaling horizontally
        # server opt-rag-api-2:8000;
        # server opt-rag-api-3:8000;
    }

    # Streamlit UI service
    upstream opt_rag_ui {
        server opt-rag-ui:8501;  # Streamlit default port
    }

    # API Gateway Server Block
    server {
        listen 80;
        server_name localhost;  # Change to your domain in production

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # API Endpoints - proxy to backend servers
        location /api/ {
            # Rate limiting: 10 requests per second with burst up to 20
            limit_req zone=api_limit burst=20 nodelay;

            # Remove /api prefix when forwarding to backend
            rewrite ^/api/(.*) /$1 break;
            
            proxy_pass http://opt_rag_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 60s;
        }

        # Streamlit UI
        location / {
            proxy_pass http://opt_rag_ui;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for Streamlit
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Monitoring endpoints
        location /metrics {
            # Only allow internal access to metrics
            allow 127.0.0.1;
            allow 172.16.0.0/12;  # Docker network range
            deny all;
            
            proxy_pass http://opt_rag_backend/metrics;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://opt_rag_backend/health;
        }

        # Static files - for documentation or frontend assets
        location /static/ {
            alias /usr/share/nginx/html/static/;
            expires 1d;
        }
    }

    # HTTP to HTTPS redirect server block (for production)
    # Uncomment when setting up SSL in production
    #server {
    #    listen 80;
    #    server_name your-domain.com;
    #    return 301 https://$host$request_uri;
    #}

    # Rate limiting zone definitions
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
} 